@inproceedings{BGJKS-csf19,
 abstract = {Code-based game-playing is a popular methodology for proving security of cryptographic constructions and side-channel countermeasures. This methodology relies on treating cryptographic proofs as an instance of relational program verification (between probabilistic programs), and decomposing the latter into a series of elementary relational program verification steps. In this paper, we develop principled methods for proving such elementary steps for probabilistic programs that operate over finite fields and related algebraic structures. We focus on three essential properties: program equivalence, information flow, and uniformity. We give characterizations of these properties based on deducibility and other notions from symbolic cryptography. We use (sometimes improve) tools from symbolic cryptography to obtain decision procedures or sound proof methods for program equivalence, information flow, and uniformity. Finally, we evaluate our approach using examples drawn from provable security and from side-channel analysis-for the latter, we focus on the masking countermeasure against differential power analysis. A partial implementation of our approach is integrated in EASYCRYPT, a proof assistant for provable security, and in MASKVERIF, a fully automated prover for masked implementations.},
 acronym = {CSF'19},
 address = {Hoboken, NJ, USA},
 author = {Barthe, Gilles and Grégoire, Benjamin and Jacomme, Charlie and Kremer, Steve and Strub, Pierre-Yves},
 booktitle = {Proceedings of the
31st IEEE Computer Security Foundations
Symposium (CSF'19)},
 doi = {10.1109/CSF.2019.00017},
 editor = {Delaune, Stéphanie and Jia, Limin},
 month = {July},
 pages = {136-151},
 pdf = {https://hal.inria.fr/hal-02117794/document},
 publisher = {IEEE Computer Society Press},
 title = {Symbolic methods in computational cryptography proofs},
 url = {https://hal.inria.fr/hal-02117794},
 year = {2019}
}

